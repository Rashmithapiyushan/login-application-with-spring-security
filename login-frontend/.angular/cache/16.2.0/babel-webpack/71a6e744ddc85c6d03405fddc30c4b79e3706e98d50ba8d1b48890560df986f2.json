{"ast":null,"code":"var _class;\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\nexport class AxiosService {\n  constructor() {\n    axios.defaults.baseURL = \"http://localhost:8080\";\n    axios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n  }\n  //now we should use jwt tokens.\n  //use to store the token in the local storage of the front end.\n  getAuthToken() {\n    return window.localStorage.getItem(\"auth_token\");\n  }\n  setAuthToken(token) {\n    if (token != null) {\n      window.localStorage.setItem(\"auth_token\", token);\n    } else {\n      window.localStorage.removeItem(\"auth_token\");\n    }\n  }\n  request(method, url, data) {\n    let headers = {};\n    if (this.getAuthToken() != null) {\n      headers = {\n        \"Authorization\": \"Bearer\" + this.getAuthToken()\n      };\n    }\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  }\n}\n_class = AxiosService;\n_class.ɵfac = function AxiosService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["axios","AxiosService","constructor","defaults","baseURL","headers","post","getAuthToken","window","localStorage","getItem","setAuthToken","token","setItem","removeItem","request","method","url","data","factory","ɵfac","providedIn"],"sources":["/home/rashmitha/Documents/Dep-10/practices/login/login-frontend/src/app/axios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AxiosService {\n\n  constructor() { \n    axios.defaults.baseURL=\"http://localhost:8080\";\n    axios.defaults.headers.post[\"Content-Type\"]=\"application/json\";\n  }\n\n  //now we should use jwt tokens.\n  //use to store the token in the local storage of the front end.\n  getAuthToken():string|null{\n    return window.localStorage.getItem(\"auth_token\");\n  }\n\n  setAuthToken(token:string){\n    if(token != null){\n      window.localStorage.setItem(\"auth_token\",token);\n    }else{\n      window.localStorage.removeItem(\"auth_token\");\n    }\n\n  }\n\n  request(method:string,url:string,data:any):Promise<any>{\n    let headers={};\n    if(this.getAuthToken() !=null){\n      headers={\"Authorization\":\"Bearer\"+this.getAuthToken()}\n    }\n    return axios({\n      method:method,\n      url:url,\n      data:data,\n      headers:headers\n    })\n  }\n}\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,YAAY;EAEvBC,YAAA;IACEF,KAAK,CAACG,QAAQ,CAACC,OAAO,GAAC,uBAAuB;IAC9CJ,KAAK,CAACG,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAC,kBAAkB;EAChE;EAEA;EACA;EACAC,YAAYA,CAAA;IACV,OAAOC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAClD;EAEAC,YAAYA,CAACC,KAAY;IACvB,IAAGA,KAAK,IAAI,IAAI,EAAC;MACfJ,MAAM,CAACC,YAAY,CAACI,OAAO,CAAC,YAAY,EAACD,KAAK,CAAC;KAChD,MAAI;MACHJ,MAAM,CAACC,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;;EAGhD;EAEAC,OAAOA,CAACC,MAAa,EAACC,GAAU,EAACC,IAAQ;IACvC,IAAIb,OAAO,GAAC,EAAE;IACd,IAAG,IAAI,CAACE,YAAY,EAAE,IAAG,IAAI,EAAC;MAC5BF,OAAO,GAAC;QAAC,eAAe,EAAC,QAAQ,GAAC,IAAI,CAACE,YAAY;MAAE,CAAC;;IAExD,OAAOP,KAAK,CAAC;MACXgB,MAAM,EAACA,MAAM;MACbC,GAAG,EAACA,GAAG;MACPC,IAAI,EAACA,IAAI;MACTb,OAAO,EAACA;KACT,CAAC;EACJ;;SAjCWJ,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAkB,OAAA,EAAZlB,MAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}